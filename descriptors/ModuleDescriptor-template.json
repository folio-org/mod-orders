{
  "id": "${artifactId}-${version}",
  "name": "Orders Business Logic Module",
  "provides": [
    {
      "id": "orders",
      "version": "3.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/orders/composite-orders",
          "permissionsRequired": ["orders.collection.get"],
          "modulePermissions": [
            "orders-storage.purchase-orders.collection.get"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/composite-orders",
          "permissionsRequired": ["orders.item.post"],
          "modulePermissions": [
            "orders-storage.purchase-orders.item.post",
            "orders-storage.po-lines.item.post",
            "orders-storage.pieces.item.post",
            "orders-storage.pieces.collection.get",
            "orders-storage.po-number.get",
            "orders-storage.alerts.item.post",
            "orders-storage.reporting-codes.item.post",
            "configuration.entries.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.post",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.holdings.item.post",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.post",
            "inventory-storage.loan-types.collection.get",
            "vendor-storage.vendors.collection.get",
            "vendor-storage.vendors.item.get"
          ]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/orders/composite-orders/{id}",
          "permissionsRequired": ["orders.item.get"],
          "modulePermissions": [
            "orders-storage.purchase-orders.item.get",
            "orders-storage.po-lines.collection.get",
             "orders-storage.alerts.item.get",
            "orders-storage.reporting-codes.item.get"
          ]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/orders/composite-orders/{id}",
          "permissionsRequired": ["orders.item.put"],
          "modulePermissions": [
            "orders-storage.purchase-orders.item.put",
            "orders-storage.po-lines.all",
            "orders-storage.alerts.all",
            "orders-storage.pieces.item.post",
            "orders-storage.pieces.collection.get",
            "orders-storage.reporting-codes.all",
            "inventory-storage.identifier-types.collection.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.post",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.holdings.item.post",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.post",
            "inventory-storage.loan-types.collection.get",
            "vendor-storage.vendors.collection.get",
            "vendor-storage.vendors.item.get"
          ]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/orders/composite-orders/{id}",
          "permissionsRequired": ["orders.item.delete"],
          "modulePermissions": [
            "orders-storage.purchase-orders.item.delete",
            "orders-storage.po-lines.item.delete",
            "orders-storage.alerts.item.delete",
            "orders-storage.reporting-codes.item.delete",
            "orders-storage.sources.item.delete"
          ]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/orders/order-lines",
          "permissionsRequired": ["orders.po-lines.collection.get"],
          "modulePermissions": [
            "orders-storage.po-lines.collection.get"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/order-lines",
          "permissionsRequired": ["orders.po-lines.item.post"],
          "modulePermissions": [
            "orders-storage.po-lines.item.post",
            "orders-storage.alerts.item.post",
            "orders-storage.reporting-codes.item.post",
            "configuration.entries.collection.get"
          ]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/orders/order-lines/{id}",
          "permissionsRequired": ["orders.po-lines.item.get"],
          "modulePermissions": [
            "orders-storage.po-lines.item.get",
            "orders-storage.alerts.item.get",
            "orders-storage.reporting-codes.item.get"
          ]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/orders/order-lines/{id}",
          "permissionsRequired": ["orders.po-lines.item.put"],
          "modulePermissions": [
            "orders-storage.po-lines.item.put",
            "orders-storage.alerts.all",
            "orders-storage.reporting-codes.all"
          ]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/orders/order-lines/{id}",
          "permissionsRequired": ["orders.po-lines.item.delete"],
          "modulePermissions": [
            "orders-storage.po-lines.item.delete",
            "orders-storage.alerts.item.delete",
            "orders-storage.reporting-codes.item.delete"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/po-number/validate",
          "permissionsRequired": ["orders.po-number.item.post"],
          "modulePermissions": [
            "orders-storage.purchase-orders.collection.get"
          ]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/orders/po-number",
          "permissionsRequired": ["orders.po-number.item.get"],
          "modulePermissions": [
            "orders-storage.po-number.get"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/receive",
          "permissionsRequired": ["orders.receiving.collection.post"],
          "modulePermissions": [
            "orders-storage.pieces.collection.get",
            "orders-storage.pieces.item.put",
            "orders-storage.po-lines.collection.get",
            "orders-storage.po-lines.item.put",
            "inventory.items.collection.get",
            "inventory.items.item.put"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/check-in",
          "permissionsRequired": ["orders.check-in.collection.post"],
          "modulePermissions": [
            "orders-storage.pieces.collection.get",
            "orders-storage.pieces.item.put",
            "orders-storage.po-lines.collection.get",
            "orders-storage.po-lines.item.put",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.post",
            "inventory-storage.items.item.put"
          ]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/orders/receiving-history",
          "permissionsRequired": ["orders.receiving-history.collection.get"],
          "modulePermissions": [
            "orders-storage.receiving-history.collection.get"
          ]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/orders/pieces",
          "permissionsRequired": ["orders.pieces.item.post"],
          "modulePermissions": [
            "orders-storage.pieces.item.post"
          ]
        }
      ]
    }
  ],
  "requires": [
    {
      "id": "orders-storage.purchase-orders",
      "version": "3.0"
    },
    {
      "id": "orders-storage.alerts",
      "version": "3.0"
    },
    {
      "id": "orders-storage.pieces",
      "version": "2.0"
    },
    {
      "id": "orders-storage.receiving-history",
      "version": "2.0"
    },
    {
      "id": "orders-storage.reporting-codes",
      "version": "3.0"
    },
    {
      "id": "orders-storage.po-lines",
      "version": "3.0"
    },
    {
      "id": "holdings-storage",
      "version": "3.0"
    },
    {
      "id": "orders-storage.po-number",
      "version": "2.0"
    },
    {
      "id": "identifier-types",
      "version": "1.1"
    },
    {
      "id": "inventory",
      "version": "8.3"
    },
    {
      "id": "instance-types",
      "version": "2.0"
    },
    {
      "id": "instance-statuses",
      "version": "1.0"
    },
    {
      "id": "item-storage",
      "version": "7.3"
    },
    {
      "id": "loan-types",
      "version": "2.2"
    },
    {
      "id":"vendor-storage.vendors",
      "version": "1.0"
    }
  ],
    "permissionSets": [
    {
      "permissionName": "orders.collection.get",
      "displayName": "orders - get orders collection",
      "description": "Get orders collection"
    },
    {
      "permissionName": "orders.item.post",
      "displayName": "orders - create a new order",
      "description": "Create a new order"
    },
    {
      "permissionName": "orders.item.get",
      "displayName": "orders - get an existing order",
      "description": "Get an existing order"
    },
    {
      "permissionName": "orders.item.put",
      "displayName": "orders - modify an existing order",
      "description": "Modify an existing order"
    },
    {
      "permissionName": "orders.item.delete",
      "displayName": "orders - delete an existing order",
      "description": "Delete an existing order"
    },
    {
      "permissionName": "orders.po-lines.collection.get",
      "displayName": "Orders - get collection of PO lines",
      "description": "Get collection of PO lines"
    },
    {
      "permissionName": "orders.po-lines.item.post",
      "displayName": "Orders - create a new PO line",
      "description": "Create a new PO line"
    },
    {
      "permissionName": "orders.po-lines.item.get",
      "displayName": "Orders - get an existing PO line",
      "description": "Get an existing PO line"
    },
    {
      "permissionName": "orders.po-lines.item.put",
      "displayName": "Orders - modify an existing PO line",
      "description": "Modify an existing PO line"
    },
    {
      "permissionName": "orders.po-lines.item.delete",
      "displayName": "Orders - delete an existing PO line",
      "description": "Delete an existing PO line"
    },
    {
      "permissionName": "orders.po-number.item.get",
      "displayName": "Orders - generate a PO Number",
      "description": "Generate a PO Number"
    },
    {
      "permissionName": "orders.po-number.item.post",
      "displayName": "Orders - validate a PO Number",
      "description": "Validate a PO Number"
    },
    {
      "permissionName": "orders.receiving.collection.post",
      "displayName": "Orders - Receive items",
      "description": "Receive items spanning one or more po-lines in this order"
    },
    {
      "permissionName": "orders.check-in.collection.post",
      "displayName": "Orders - Check-in items",
      "description": "Check-in items spanning one or more po-lines in this order"
    },
    {
      "permissionName": "orders.receiving-history.collection.get",
      "displayName": "Orders - Receiving history",
      "description": "Get receiving history matching the provided criteria"
    },
    {
      "permissionName": "orders.pieces.item.post",
      "displayName": "Orders - Piece",
      "description": "Create piece record"
    },
    {
      "permissionName": "orders.all",
      "displayName": "orders - all permissions",
      "description": "Entire set of permissions needed to use orders",
      "subPermissions": [
        "orders.collection.get",
        "orders.item.post",
        "orders.item.get",
        "orders.item.put",
        "orders.item.delete",
        "orders.po-lines.collection.get",
        "orders.po-lines.item.post",
        "orders.po-lines.item.get",
        "orders.po-lines.item.put",
        "orders.po-lines.item.delete",
        "orders.po-number.item.post",
        "orders.receiving.collection.post",
        "orders.check-in.collection.post",
        "orders.receiving-history.collection.get",
        "orders.pieces.item.post"
      ]
    }
  ],
  "launchDescriptor": {
    "dockerImage": "${artifactId}:${version}",
    "dockerArgs": {
      "HostConfig": { "PortBindings": { "8081/tcp":  [{ "HostPort": "%p" }] } }
    },
    "dockerPull" : false
  }
}
