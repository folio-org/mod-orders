<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.folio</groupId>
  <artifactId>mod-orders</artifactId>
  <version>12.6.0-SNAPSHOT</version>

  <name>Orders Business Logic</name>
  <description>Business logic to manage orders in FOLIO</description>
  <url>https://github.com/folio-org/mod-orders</url>
  <inceptionYear>2018</inceptionYear>

  <organization>
    <name>The Open Library Foundation</name>
    <url>https://dev.folio.org</url>
  </organization>

  <scm>
    <url>https://github.com/folio-org/mod-orders.git</url>
    <connection>scm:git:git://github.com/folio-org/mod-orders.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/mod-orders.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>https://issues.folio.org/browse/MODORDERS</url>
  </issueManagement>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://jenkins-aws.indexdata.com/job/folio-org/job/mod-orders</url>
  </ciManagement>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <aspectj.version>1.9.7</aspectj.version>
    <module_name>mod-orders</module_name>
    <http.port>8081</http.port>
    <jsonschema_paths>
      acq-models/common/schemas,acq-models/mod-orders/schemas,acq-models/mod-orders-storage/schemas,acq-models/acquisitions-unit/schemas,acq-models/mod-invoice-storage/schemas,raml-util/schemas
    </jsonschema_paths>
    <generated_sources_dir>${project.build.directory}/generated-sources</generated_sources_dir>
    <jsonschema2pojo_output_dir>${generated_sources_dir}/jsonschema2pojo</jsonschema2pojo_output_dir>
    <ramlfiles_path>${basedir}/ramls</ramlfiles_path>
    <ramlfiles_util_path>${ramlfiles_path}/raml-util</ramlfiles_util_path>
    <ramlfiles_acq_models_path>${ramlfiles_path}/acq-models</ramlfiles_acq_models_path>
    <raml-module-builder.version>35.0.4</raml-module-builder.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <mod-configuration-client.version>5.9.1-SNAPSHOT</mod-configuration-client.version>
    <sonar.exclusions>**/models/**.java, **/completablefuture/FolioVertxCompletableFuture.java,**/unopen/**.java</sonar.exclusions>
    <sonar.test.exclusions>**/*Test.java</sonar.test.exclusions>
    <spring.version>5.3.20</spring.version>
    <vertx.version>4.3.5</vertx.version>
    <log4j.version>2.19.0</log4j.version>
    <argLine />
  </properties>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven Repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>domain-models-api-interfaces</artifactId>
      <version>${raml-module-builder.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>domain-models-runtime</artifactId>
      <version>${raml-module-builder.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-di-support</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.19.0</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>5.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>mod-configuration-client</artifactId>
      <version>${mod-configuration-client.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>one.util</groupId>
      <artifactId>streamex</artifactId>
      <version>0.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.javamoney</groupId>
      <artifactId>moneta</artifactId>
      <version>1.4.2</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-kafka-wrapper</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>data-import-processing-core</artifactId>
      <version>4.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.github.rworsnop</groupId>
      <artifactId>vertx-concurrent</artifactId>
      <version>1.0.0</version>
    </dependency>
    <!--vertx-rx-java required for vertx-concurrent-1.0.0 -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java</artifactId>
      <version>${vertx.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <version>${vertx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>4.6.1</version>
      <scope>test</scope>
    </dependency>
    <!-- The RMB runtime defines usage of log4j2 for vert.x logging interface. Including Log4j 2 SLF4J Binding to allow SLF4J API to use Log4j 2 as the implementation. -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-isbn-util</artifactId>
      <version>1.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>mod-data-import-converter-storage-client</artifactId>
      <version>1.14.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.13</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>net.mguenther.kafka</groupId>
      <artifactId>kafka-junit</artifactId>
      <version>3.3.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.module</groupId>
          <artifactId>jackson-module-scala_2.13</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>data-import-utils</artifactId>
      <version>1.9.0</version>
      <type>jar</type>
      <exclusions>
        <exclusion>
          <groupId>org.z3950.zing</groupId>
          <artifactId>cql2pgjson</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>2.27.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>postgres-testing</artifactId>
      <version>${raml-module-builder.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.24</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.folio</groupId>
        <artifactId>domain-models-maven-plugin</artifactId>
        <version>${raml-module-builder.version}</version>
        <executions>
          <execution>
            <id>generate_interfaces</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <schemaPaths>${jsonschema_paths}</schemaPaths>
              <ramlDirs>${ramlfiles_path}</ramlDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>process-sources</phase>
          </execution>
          <execution>
            <id>build-generated-code</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>add_generated_sources_folder</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/raml-jaxrs</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jsonschema2pojo</groupId>
        <artifactId>jsonschema2pojo-maven-plugin</artifactId>
        <version>1.0.2</version>
        <configuration>
          <includes>
            <include>*.json</include>
          </includes>
          <excludes>
            <exclude>reason_for_closure.json</exclude>
            <exclude>reason_for_closure_collection.json</exclude>
            <exclude>budget_rollover.json</exclude>
            <exclude>encumbrance_rollover.json</exclude>
            <exclude>ledger_fiscal_year_rollover.json</exclude>
            <exclude>ledger_fiscal_year_rollover_collection.json</exclude>
          </excludes>
          <outputDirectory>${jsonschema2pojo_output_dir}</outputDirectory>
          <generateBuilders>true</generateBuilders>
        </configuration>
        <executions>
          <execution>
            <id>orders-storage</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/mod-orders-storage/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>common</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/common/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>mod-orgs</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/mod-orgs/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>mod-finance</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/mod-finance/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model.finance</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>invoice-storage</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/mod-invoice-storage/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model.invoice</targetPackage>
            </configuration>
          </execution>
          <execution>
            <id>mod-tags</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${basedir}/ramls/acq-models/mod-tags/schemas</sourceDirectory>
              <targetPackage>org.folio.rest.acq.model.tag</targetPackage>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>git submodule update</id>
            <phase>initialize</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>git</executable>
              <arguments>
                <argument>submodule</argument>
                <argument>update</argument>
                <argument>--init</argument>
                <argument>--recursive</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.nickwongdev</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.12.6</version>
        <configuration>
          <verbose>true</verbose>
          <complianceLevel>11</complianceLevel>
          <XaddSerialVersionUID>true</XaddSerialVersionUID>
          <showWeaveInfo>true</showWeaveInfo>
          <forceAjcCompile>true</forceAjcCompile>
          <aspectDirectory>src/main/java/org/folio/rest/annotations</aspectDirectory>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>org.folio</groupId>
              <artifactId>domain-models-api-aspects</artifactId>
            </aspectLibrary>
          </aspectLibraries>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-generated-code</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/generated-sources/raml-jaxrs</outputDirectory>
              <resources>
                <resource>
                  <directory>generated-src</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/apidocs/raml</outputDirectory>
              <resources>
                <resource>
                  <directory>${ramlfiles_path}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-resources-2</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/apidocs/raml-util</outputDirectory>
              <resources>
                <resource>
                  <directory>${ramlfiles_util_path}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-resources-3</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/apidocs/acq-models</outputDirectory>
              <resources>
                <resource>
                  <directory>${ramlfiles_acq_models_path}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/descriptors</directory>
                  <include>*Descriptor*-template.json</include>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-descriptor-outputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/ModuleDescriptor.json</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/DeploymentDescriptor.json</destinationFile>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- replace the baseuri and the protocol in the ramls that are in the
        apidocs directory so that they can at least be used to check via the html
        api console on IE -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <replace token="baseUri: https://github.com/folio-org/mod-orders" value="baseUri: http://localhost:${http.port}/apis" dir="${basedir}/target/classes/apidocs/raml">
                  <include name="**/*.raml" />
                </replace>
                <replace token="protocols: [ HTTP, HTTPS ]" value="protocols: [ HTTP ]" dir="${basedir}/target/classes/apidocs/raml">
                  <include name="**/*.raml" />
                </replace>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>set-system-properties</id>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
            <configuration>
              <properties>
                <property>
                  <name>log4j.configurationFile</name>
                  <value>${project.baseUri}src/main/resources/log4j2.properties</value>
                </property>
                <property>
                  <name>jsonschema2pojo.config.includeHashcodeAndEquals</name>
                  <value>true</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Multi-Release>true</Multi-Release>
                    <Main-Class>org.folio.rest.RestLauncher</Main-Class>
                    <Main-Verticle>org.folio.rest.RestVerticle</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <!-- The following transformers are required to let javamoney API work fully as part of "fat" jar -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>javamoney.properties</resource>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>org.folio:raml-module-builder</artifact>
                  <excludes>
                    <exclude>**/log4j2.properties</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>**/log4j.properties</exclude>
                    <exclude>**/Log4j2Plugins.dat</exclude>
                  </excludes>
                </filter>
              </filters>
              <artifactSet />
              <outputFile>${project.build.directory}/${project.artifactId}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <preparationGoals>clean verify</preparationGoals>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <argLine>@{argLine} -Xmx1024m -Duser.language=en -Duser.region=US</argLine>
          <excludes>
            <exclude>org/folio/rest/impl/**Test.class</exclude>
          </excludes>
          <includes>
            <include>org/folio/ApiTestSuite.class</include>
            <include>org/folio/DataImportTestSuite.class</include>
          </includes>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M7</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>2.13.4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>1.17.4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
