#%RAML 1.0
title: Pieces
baseUri: https://github.com/folio-org/mod-orders
version: v1
protocols: [ HTTP, HTTPS ]

documentation:
  - title: Orders Business Logic API
    content: <b>API for managing pieces</b>

types:
  piece: !include acq-models/mod-orders-storage/schemas/piece.json
  piece-collection: !include acq-models/mod-orders-storage/schemas/piece_collection.json
  errors: !include raml-util/schemas/errors.schema
  UUID:
    type: string
    pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$

traits:
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  language: !include raml-util/traits/language.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include rtypes/collection-with-json-response.raml
  collection-item: !include rtypes/item-collection-with-json-response.raml

/orders/pieces:
  displayName: Pieces
  description: Create piece record
  type:
    collection:
      exampleCollection: !include acq-models/mod-orders-storage/examples/piece_collection.sample
      exampleItem: !include acq-models/mod-orders-storage/examples/piece_get.sample
      schemaCollection: piece-collection
      schemaItem: piece
  is: [validate]
  get:
    is: [pageable, searchable: {description: "using CQL (indexes for piece records)", example: "format==\"Physical\""} ]
  post:
    description: Create piece record
    queryParameters:
      createItem:
        displayName: Should item will be created for piece
        type: boolean
        description: Should item will be created for piece
        example: true
        required: false
        default: false
  /{id}:
    uriParameters:
      id:
        description: The UUID of a piece record
        type: UUID
    type:
      collection-item:
        exampleItem: !include acq-models/mod-orders-storage/examples/piece_get.sample
        schema: piece
    is: [validate, language]
    get:
      description: Return a piece record with given {id}
    put:
      description: Update a piece record with given {id}
      queryParameters:
        createItem:
          displayName: Should item will be created for piece
          type: boolean
          description: Should item will be created for piece
          example: true
          required: false
          default: false
      body:
        application/json:
          type: piece
          example:
            strict: false
            value: !include acq-models/mod-orders-storage/examples/piece_get.sample
      responses:
        204:
          description: "Piece record successfully updated"
        400:
          description: "Bad request"
          body:
            application/json:
              example:
                strict: false
                value: !include examples/errors_400.sample
            text/plain:
              example: "unable to create Piece -- Bad request"
        404:
          description: "Request id does not exists"
          body:
            application/json:
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            application/json:
              example:
                strict: false
                value: !include examples/errors_500.sample
            text/plain:
              example: "unable to create Piece -- Internal server error, e.g. due to misconfiguration"
    delete:
      description: Delete a piece with given {id}
      queryParameters:
        deleteHolding:
          displayName: The associated holding should be removed
          type: boolean
          description: The associated holding should be removed
          example: true
          required: false
          default: false
      responses:
        204:
          description: "Piece record successfully deleted"
        400:
          description: "Bad request"
          body:
            application/json:
              example:
                strict: false
                value: !include examples/errors_400.sample
            text/plain:
              example: "unable to delete Piece -- Bad request"
        404:
          description: "Request id does not exists"
          body:
            application/json:
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            application/json:
              example:
                strict: false
                value: !include examples/errors_500.sample
            text/plain:
              example: "unable to delete Piece -- Internal server error, e.g. due to misconfiguration"
